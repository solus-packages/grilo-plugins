From 83b6979ed91bc0163bcf508fae0942b9e56f4331 Mon Sep 17 00:00:00 2001
From: Victor Toso <me@victortoso.com>
Date: Fri, 13 Sep 2019 10:00:45 +0200
Subject: [PATCH 1/2] tracker-utils: use define for queries using
 ExternalReference

To make changes easier to read. This is preparatory patch to include
runtime check on tracker version for fixing issue #55
---
 src/tracker/grl-tracker-utils.c | 42 +++++++++++++++++++++++++++------
 1 file changed, 35 insertions(+), 7 deletions(-)

diff --git a/src/tracker/grl-tracker-utils.c b/src/tracker/grl-tracker-utils.c
index 86f0f0c8..091f69b3 100644
--- a/src/tracker/grl-tracker-utils.c
+++ b/src/tracker/grl-tracker-utils.c
@@ -30,6 +30,34 @@
 #include "grl-tracker-utils.h"
 #include <glib/gi18n-lib.h>
 
+/* Queries that are uses tracker:hasExternalReference introduced in 2.3
+ * (development) cycle of tracker */
+
+#define ATTR_CALL_MB_TRACK_ID \
+        "(SELECT tracker:referenceIdentifier(?t) AS ?t_id { " \
+        "?urn tracker:hasExternalReference ?t . ?t " \
+        "tracker:referenceSource \"https://musicbrainz.org/doc/Track\" })"
+
+#define ATTR_CALL_MB_ARTIST_ID \
+        "(SELECT tracker:referenceIdentifier(?a) AS ?a_id { " \
+        "?urn nmm:performer ?artist . ?artist tracker:hasExternalReference ?a . ?a " \
+        "tracker:referenceSource \"https://musicbrainz.org/doc/Artist\" })"
+
+#define ATTR_CALL_MB_RECORDING_ID \
+        "(SELECT tracker:referenceIdentifier(?r) AS ?r_id { " \
+        "?urn tracker:hasExternalReference ?r . ?r " \
+        "tracker:referenceSource \"https://musicbrainz.org/doc/Recording\" })"
+
+#define ATTR_CALL_MB_RELEASE_ID \
+        "(SELECT tracker:referenceIdentifier(?re) AS ?re_id { " \
+        "?urn nmm:musicAlbum ?album . ?album tracker:hasExternalReference ?re . ?re " \
+        "tracker:referenceSource \"https://musicbrainz.org/doc/Release\" })"
+
+#define ATTR_CALL_MB_RELEASE_GROUP_ID \
+        "(SELECT tracker:referenceIdentifier(?rg) AS ?rg_id { " \
+        "?urn nmm:musicAlbum ?album . ?album tracker:hasExternalReference ?rg . ?rg " \
+        "tracker:referenceSource \"https://musicbrainz.org/doc/Release_Group\" })"
+
 /**/
 
 static GHashTable *grl_to_sparql_mapping = NULL;
@@ -302,28 +330,28 @@ grl_tracker_setup_key_mappings (void)
 
   insert_key_mapping (GRL_METADATA_KEY_MB_TRACK_ID,
                       NULL,
-                      "(SELECT tracker:referenceIdentifier(?t) AS ?t_id { ?urn tracker:hasExternalReference ?t . ?t tracker:referenceSource \"https://musicbrainz.org/doc/Track\" })",
-		      "audio");
+                      ATTR_CALL_MB_TRACK_ID,
+                      "audio");
 
   insert_key_mapping (GRL_METADATA_KEY_MB_ARTIST_ID,
                       NULL,
-		      "(SELECT tracker:referenceIdentifier(?a) AS ?a_id { ?urn nmm:performer ?artist . ?artist tracker:hasExternalReference ?a . ?a tracker:referenceSource \"https://musicbrainz.org/doc/Artist\" })",
+                      ATTR_CALL_MB_ARTIST_ID,
                       "audio");
 
   insert_key_mapping (GRL_METADATA_KEY_MB_RECORDING_ID,
                       NULL,
-		      "(SELECT tracker:referenceIdentifier(?r) AS ?r_id { ?urn tracker:hasExternalReference ?r . ?r tracker:referenceSource \"https://musicbrainz.org/doc/Recording\" })",
+                      ATTR_CALL_MB_RECORDING_ID,
                       "audio");
 
   insert_key_mapping (GRL_METADATA_KEY_MB_RELEASE_ID,
                       NULL,
-		      "(SELECT tracker:referenceIdentifier(?re) AS ?re_id { ?urn nmm:musicAlbum ?album . ?album tracker:hasExternalReference ?re . ?re tracker:referenceSource \"https://musicbrainz.org/doc/Release\" })",
+                      ATTR_CALL_MB_RELEASE_ID,
                       "audio");
 
   insert_key_mapping (GRL_METADATA_KEY_MB_RELEASE_GROUP_ID,
                       NULL,
-		      "(SELECT tracker:referenceIdentifier(?rg) AS ?rg_id { ?urn nmm:musicAlbum ?album . ?album tracker:hasExternalReference ?rg . ?rg tracker:referenceSource \"https://musicbrainz.org/doc/Release_Group\" })",
-		      "audio");
+                      ATTR_CALL_MB_RELEASE_GROUP_ID,
+                      "audio");
 
   insert_key_mapping_with_setter (grl_metadata_key_chromaprint,
                                   NULL,
-- 
2.22.0


From 4983b27827a98fdd803d4bbf7b4b1cfbff681ef1 Mon Sep 17 00:00:00 2001
From: Victor Toso <me@victortoso.com>
Date: Fri, 13 Sep 2019 10:11:00 +0200
Subject: [PATCH 2/2] tracker-utils: use runtime check for ExternalReference
 queries

This patch allows the tracker plugin to be built in not so recent
versions of tracker library. This patch reverts the build time check
introduced in 7c29d5e and avoids regression within new queries by
doing a runtime check before setting up the mapping between tracker
and Grilo's metadata-keys.

Resolves: https://gitlab.gnome.org/GNOME/grilo-plugins/issues/55
---
 meson.build                     |  4 ++
 src/tracker/grl-tracker-utils.c | 75 ++++++++++++++++++++++-----------
 src/tracker/grl-tracker-utils.h |  2 +
 src/tracker/grl-tracker.c       | 52 +++++++++++++++++++++--
 4 files changed, 106 insertions(+), 27 deletions(-)

diff --git a/meson.build b/meson.build
index f0fd5142..19550e00 100644
--- a/meson.build
+++ b/meson.build
@@ -69,6 +69,10 @@ sqlite3_dep = dependency('sqlite3', required: false)
 totem_plparser_dep = dependency('totem-plparser', version: '>= 3.4.1', required: false)
 totem_plparser_mini_dep = dependency('totem-plparser-mini', version: '>= 3.4.1', required: false)
 tracker_sparql_dep = dependency('tracker-sparql-2.0', version: '>= 2.3.0', required: false)
+tracker_sparql_dep = dependency('tracker-sparql-2.0', required: false)
+if not tracker_sparql_dep.found()
+    tracker_sparql_dep = dependency('tracker-sparql-1.0', required: false)
+endif
 
 lua_dep = dependency('lua', version: '>= 5.3.0', required: false)
 if not lua_dep.found()
diff --git a/src/tracker/grl-tracker-utils.c b/src/tracker/grl-tracker-utils.c
index 091f69b3..62647a2f 100644
--- a/src/tracker/grl-tracker-utils.c
+++ b/src/tracker/grl-tracker-utils.c
@@ -328,30 +328,57 @@ grl_tracker_setup_key_mappings (void)
                       "nfo:duration(?urn)",
                       "audio");
 
-  insert_key_mapping (GRL_METADATA_KEY_MB_TRACK_ID,
-                      NULL,
-                      ATTR_CALL_MB_TRACK_ID,
-                      "audio");
-
-  insert_key_mapping (GRL_METADATA_KEY_MB_ARTIST_ID,
-                      NULL,
-                      ATTR_CALL_MB_ARTIST_ID,
-                      "audio");
-
-  insert_key_mapping (GRL_METADATA_KEY_MB_RECORDING_ID,
-                      NULL,
-                      ATTR_CALL_MB_RECORDING_ID,
-                      "audio");
-
-  insert_key_mapping (GRL_METADATA_KEY_MB_RELEASE_ID,
-                      NULL,
-                      ATTR_CALL_MB_RELEASE_ID,
-                      "audio");
-
-  insert_key_mapping (GRL_METADATA_KEY_MB_RELEASE_GROUP_ID,
-                      NULL,
-                      ATTR_CALL_MB_RELEASE_GROUP_ID,
-                      "audio");
+  if (grl_tracker_is_2_3_0_compat()) {
+    insert_key_mapping (GRL_METADATA_KEY_MB_TRACK_ID,
+                        NULL,
+                        ATTR_CALL_MB_TRACK_ID,
+                        "audio");
+
+    insert_key_mapping (GRL_METADATA_KEY_MB_ARTIST_ID,
+                        NULL,
+                        ATTR_CALL_MB_ARTIST_ID,
+                        "audio");
+
+    insert_key_mapping (GRL_METADATA_KEY_MB_RECORDING_ID,
+                        NULL,
+                        ATTR_CALL_MB_RECORDING_ID,
+                        "audio");
+
+    insert_key_mapping (GRL_METADATA_KEY_MB_RELEASE_ID,
+                        NULL,
+                        ATTR_CALL_MB_RELEASE_ID,
+                        "audio");
+
+    insert_key_mapping (GRL_METADATA_KEY_MB_RELEASE_GROUP_ID,
+                        NULL,
+                        ATTR_CALL_MB_RELEASE_GROUP_ID,
+                        "audio");
+  } else {
+    insert_key_mapping (GRL_METADATA_KEY_MB_TRACK_ID,
+                        "nmm:mbTrackID",
+                        "nmm:mbTrackID(?urn)",
+                        "audio");
+
+    insert_key_mapping (GRL_METADATA_KEY_MB_ARTIST_ID,
+                        "nmm:mbArtistID",
+                        "nmm:mbArtistID(?urn)",
+                        "audio");
+
+    insert_key_mapping (GRL_METADATA_KEY_MB_RECORDING_ID,
+                        "nmm:mbRecordingID",
+                        "nmm:mbRecordingID(?urn)",
+                        "audio");
+
+    insert_key_mapping (GRL_METADATA_KEY_MB_RELEASE_ID,
+                        "nmm:mbReleaseID",
+                        "nmm:mbReleaseID(?urn)",
+                        "audio");
+
+    insert_key_mapping (GRL_METADATA_KEY_MB_RELEASE_GROUP_ID,
+                        "nmm:mbReleaseGroupID",
+                        "nmm:mbReleaseGroupID(?urn)",
+                        "audio");
+  }
 
   insert_key_mapping_with_setter (grl_metadata_key_chromaprint,
                                   NULL,
diff --git a/src/tracker/grl-tracker-utils.h b/src/tracker/grl-tracker-utils.h
index bf6c0ef5..a240a347 100644
--- a/src/tracker/grl-tracker-utils.h
+++ b/src/tracker/grl-tracker-utils.h
@@ -70,6 +70,8 @@ gboolean grl_tracker_key_is_supported (const GrlKeyID key);
 
 void grl_tracker_setup_key_mappings (void);
 
+gboolean grl_tracker_is_2_3_0_compat (void);
+
 tracker_grl_sparql_t *grl_tracker_get_mapping_from_sparql (const gchar *key);
 
 GrlMedia *grl_tracker_build_grilo_media (const gchar   *rdf_type,
diff --git a/src/tracker/grl-tracker.c b/src/tracker/grl-tracker.c
index 96527d14..1a019df6 100644
--- a/src/tracker/grl-tracker.c
+++ b/src/tracker/grl-tracker.c
@@ -65,6 +65,12 @@ GRL_LOG_DOMAIN_STATIC(tracker_general_log_domain);
   "<%s> tracker:notify true "                   \
   "}"
 
+#define TRACKER_QUERY_IF_COMPAT_WITH_2_3_0 \
+  "SELECT ?e WHERE " \
+  "{ " \
+  "?e a tracker:ExternalReference . " \
+  "}"
+
 /* --- Other --- */
 
 gboolean grl_tracker_plugin_init (GrlRegistry *registry,
@@ -78,6 +84,7 @@ GrlPlugin *grl_tracker_plugin;
 GCancellable *grl_tracker_plugin_init_cancel = NULL;
 gboolean grl_tracker_upnp_present = FALSE;
 GrlTrackerQueue *grl_tracker_queue = NULL;
+gboolean tracker_daemon_compat_2_3_0 = FALSE;
 
 /* tracker plugin config */
 gboolean grl_tracker_browse_filesystem = FALSE;
@@ -85,6 +92,11 @@ gboolean grl_tracker_show_documents    = FALSE;
 
 /* =================== Tracker Plugin  =============== */
 
+gboolean grl_tracker_is_2_3_0_compat (void)
+{
+  return tracker_daemon_compat_2_3_0;
+}
+
 static void
 init_sources (void)
 {
@@ -99,12 +111,46 @@ init_sources (void)
   }
 }
 
+static void
+tracker_version_compat_check_cb (GObject      *object,
+                                 GAsyncResult *result,
+                                 gpointer       data)
+{
+  GError *error = NULL;
+  TrackerSparqlCursor  *cursor;
+
+  GRL_DEBUG ("%s", __FUNCTION__);
+
+  cursor = tracker_sparql_connection_query_finish (grl_tracker_connection,
+                                                   result, &error);
+  if (error != NULL) {
+    GRL_DEBUG("Compat check failed: %s", error->message);
+    g_error_free (error);
+  } else {
+    tracker_daemon_compat_2_3_0 = TRUE;
+    g_clear_object(&cursor);
+  }
+
+  init_sources();
+}
+
+/* For now we are only checking against one version */
+static void
+tracker_version_compat_check (void)
+{
+  tracker_sparql_connection_query_async (grl_tracker_connection,
+                                         TRACKER_QUERY_IF_COMPAT_WITH_2_3_0,
+                                         grl_tracker_plugin_init_cancel,
+                                         tracker_version_compat_check_cb,
+                                         NULL);
+}
+
 static void
 tracker_update_folder_class_cb (GObject      *object,
                                 GAsyncResult *result,
                                 gpointer      data)
 {
-  init_sources ();
+  tracker_version_compat_check ();
 }
 
 static void
@@ -127,7 +173,7 @@ tracker_get_folder_class_cb (GObject      *object,
   }
 
   if (!cursor) {
-    init_sources ();
+    tracker_version_compat_check ();
     return;
   }
 
@@ -184,7 +230,7 @@ tracker_get_upnp_class_cb (GObject      *object,
                                            tracker_get_folder_class_cb,
                                            NULL);
   else
-    init_sources ();
+    tracker_version_compat_check ();
 }
 
 static void
-- 
2.22.0

